{"version":3,"sources":["components/pageNav/pageNav.jsx","components/filterInput/filterInput.jsx","components/dataTable/dataTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["PageNav","props","className","map","page","onClick","setPage","FilterInput","onChange","e","data","url","value","a","fetch","then","res","json","setData","filter","name","email","id","includes","fetchData","updateFetch","target","placeholder","DataTable","useState","dynamicData","setDynamicData","useFetch","response","useEffect","orderName","setOrderName","orderEmail","setOrderEmail","orderId","setOrderId","sortData","field","order","sortedData","concat","sort","b","reverse","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5486ad44.chunk.js","sourcesContent":["import React from 'react';\r\nimport './pageNav.css';\r\n\r\nexport const PageNav = (props) => {\r\n  const pages = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n  return (\r\n    <div className=\"page-nav\">\r\n      {pages.map(page => {\r\n        return (<button className=\"page-nav-item\" key={page} onClick={() => { props.setPage(page) }}>{page}</button>)\r\n      })}\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport './filterInput.css';\r\n\r\nexport const FilterInput = (props) => {\r\n  const updateFetch = (url, value) => {\r\n\r\n    async function fetchData() {\r\n      fetch(url).then(async res => {\r\n        const json = await res.json();\r\n        if (value) {\r\n          props.setData(json.filter(({ name, email, id }) => {\r\n            return `${name}`.includes(value) || `${email}`.includes(value) || `${id}`.includes(value)\r\n          }))\r\n        } else {\r\n          props.setData(json);\r\n        }\r\n      })\r\n    }\r\n    fetchData();\r\n    return props.data;\r\n  };\r\n  return (\r\n    <div className=\"filter-input\">\r\n      <input onChange={(e) => {\r\n        const value = e.target.value;\r\n        const data = updateFetch(\"https://jsonplaceholder.typicode.com/comments\", value);\r\n        props.setData(data);\r\n      }} placeholder=\"filter...\" />\r\n    </div>\r\n  );\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { PageNav } from '../pageNav/pageNav';\r\nimport { FilterInput } from '../filterInput/filterInput';\r\nimport './dataTable.css';\r\n\r\nexport const DataTable = () => {\r\n  const [dynamicData, setDynamicData] = useState(null);\r\n  const useFetch = url => {\r\n\r\n    async function fetchData() {\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n      setDynamicData(json);\r\n    }\r\n\r\n    useEffect(() => { fetchData() }, [url]);\r\n\r\n    return dynamicData;\r\n  };\r\n  const [page, setPage] = useState(1);\r\n  const data = useFetch(\"https://jsonplaceholder.typicode.com/comments\");\r\n  let [orderName, setOrderName] = useState(1);\r\n  let [orderEmail, setOrderEmail] = useState(1);\r\n  let [orderId, setOrderId] = useState(false);\r\n\r\n  const sortData = (field, order) => {\r\n    const dataBufer = data.concat();\r\n    const sortedData = dataBufer.sort((a, b) => { return a[field] > b[field] ? 1 : -1 });\r\n    order === false && sortedData.reverse();\r\n    setDynamicData(sortedData);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FilterInput data={dynamicData} setData={setDynamicData} useFetch={useFetch} />\r\n      <div className=\"table-wrapper\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"first-col-head\" onClick={() => { sortData('name', orderName); setOrderName(!orderName); setOrderEmail(1); setOrderId(1) }}>\r\n                {`Name ${orderName !== 1 ? (orderName ? '(desc)' : '(asc)') : ''}`}\r\n              </th>\r\n              <th className=\"second-col-head\" onClick={() => { sortData('email', orderEmail); setOrderEmail(!orderEmail); setOrderName(1); setOrderId(1) }} >\r\n                {`Email ${orderEmail !== 1 ? (orderEmail ? '(desc)' : '(asc)') : ''}`}\r\n              </th>\r\n              <th className=\"third-col-head\" onClick={() => { sortData('id', orderId); setOrderId(!orderId); setOrderName(1); setOrderEmail(1); }}>\r\n                {`Id ${orderId !== 1 ? (orderId ? '(desc)' : '(asc)') : ('')}`}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"data-table-wrapper\">\r\n            {dynamicData && dynamicData.filter(({ id }) => 50 * page >= id && 50 * (page - 1) <= id).map(({ name, email, id }) => {\r\n              return (\r\n                <tr key={`${id}${email}`}>\r\n                  <td className=\"first-col\">{name}</td>\r\n                  <td className=\"second-col\">{email}</td>\r\n                  <td className=\"third-col\">{id}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <PageNav page={page} setPage={setPage} />\r\n    </>\r\n  );\r\n};","import './App.css';\nimport { DataTable } from './components/dataTable/dataTable';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <DataTable />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}